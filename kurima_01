import React, { useState, useEffect } from 'react';
import { Tractor, MapPin, Phone, Calendar, DollarSign, Users, BarChart3, Settings, Plus, Clock, CheckCircle, AlertCircle } from 'lucide-react';

const TractorCoopPlatform = () => {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [bookings, setBookings] = useState([
    {
      id: 1,
      farmer: 'John Mukamuri',
      location: 'Mutoko Ward 15',
      service: 'Tractor Ploughing',
      hectares: 2.5,
      date: '2025-07-02',
      status: 'confirmed',
      operator: 'Peter Chigwedere',
      price: 75,
      contact: '+263 77 123 4567'
    },
    {
      id: 2,
      farmer: 'Mary Chidzonga',
      location: 'Gutu Ward 8',
      service: 'Animal-drawn Ploughing',
      hectares: 1.2,
      date: '2025-07-03',
      status: 'pending',
      operator: 'TBD',
      price: 20,
      contact: '+263 71 987 6543'
    },
    {
      id: 3,
      farmer: 'Simon Mutasa',
      location: 'Murehwa Ward 12',
      service: 'Tractor Ploughing',
      hectares: 4.0,
      date: '2025-07-05',
      status: 'in_progress',
      operator: 'Grace Mazuru',
      price: 140,
      contact: '+263 78 456 7890'
    }
  ]);

  const [tractors, setTractors] = useState([
    {
      id: 'T001',
      type: 'Massey Ferguson 135',
      location: 'Mutoko Hub',
      status: 'available',
      operator: 'Peter Chigwedere',
      lastService: '2025-06-15',
      hoursWorked: 245
    },
    {
      id: 'T002',
      type: 'John Deere 5055E',
      location: 'Gutu Hub',
      status: 'in_use',
      operator: 'Grace Mazuru',
      lastService: '2025-06-20',
      hoursWorked: 189
    },
    {
      id: 'AD01',
      type: 'Animal-drawn Plough Set',
      location: 'Murehwa Hub',
      status: 'available',
      operator: 'Thomas Nhongo',
      lastService: '2025-06-10',
      hoursWorked: 78
    }
  ]);

  const [newBooking, setNewBooking] = useState({
    farmer: '',
    contact: '',
    location: '',
    service: 'Tractor Ploughing',
    hectares: '',
    date: '',
    urgency: 'normal'
  });

  const [stats, setStats] = useState({
    totalBookings: 127,
    completedJobs: 89,
    activeOperators: 12,
    totalRevenue: 4250,
    avgRating: 4.6
  });

  const calculatePrice = (service, hectares, urgency) => {
    const baseRates = {
      'Tractor Ploughing': 35,
      'Animal-drawn Ploughing': 18
    };
    
    const urgencyMultiplier = urgency === 'urgent' ? 1.3 : 1.0;
    return Math.round(baseRates[service] * hectares * urgencyMultiplier);
  };

  const handleBookingSubmit = (e) => {
    e.preventDefault();
    const price = calculatePrice(newBooking.service, parseFloat(newBooking.hectares), newBooking.urgency);
    
    const booking = {
      id: bookings.length + 1,
      ...newBooking,
      hectares: parseFloat(newBooking.hectares),
      status: 'pending',
      operator: 'TBD',
      price
    };
    
    setBookings([...bookings, booking]);
    setNewBooking({
      farmer: '',
      contact: '',
      location: '',
      service: 'Tractor Ploughing',
      hectares: '',
      date: '',
      urgency: 'normal'
    });
    alert('Booking submitted successfully! SMS confirmation sent.');
  };

  const StatusBadge = ({ status }) => {
    const colors = {
      pending: 'bg-yellow-100 text-yellow-800',
      confirmed: 'bg-blue-100 text-blue-800',
      in_progress: 'bg-green-100 text-green-800',
      completed: 'bg-gray-100 text-gray-800'
    };
    
    const icons = {
      pending: <Clock className="w-3 h-3" />,
      confirmed: <CheckCircle className="w-3 h-3" />,
      in_progress: <AlertCircle className="w-3 h-3" />,
      completed: <CheckCircle className="w-3 h-3" />
    };
    
    return (
      <span className={`inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium ${colors[status]}`}>
        {icons[status]}
        {status.replace('_', ' ')}
      </span>
    );
  };

  const Dashboard = () => (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
        <div className="bg-white p-6 rounded-lg shadow-sm border">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Total Bookings</p>
              <p className="text-2xl font-bold text-gray-900">{stats.totalBookings}</p>
            </div>
            <Calendar className="h-8 w-8 text-blue-600" />
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-lg shadow-sm border">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Completed Jobs</p>
              <p className="text-2xl font-bold text-gray-900">{stats.completedJobs}</p>
            </div>
            <CheckCircle className="h-8 w-8 text-green-600" />
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-lg shadow-sm border">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Active Operators</p>
              <p className="text-2xl font-bold text-gray-900">{stats.activeOperators}</p>
            </div>
            <Users className="h-8 w-8 text-purple-600" />
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-lg shadow-sm border">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Revenue (USD)</p>
              <p className="text-2xl font-bold text-gray-900">${stats.totalRevenue}</p>
            </div>
            <DollarSign className="h-8 w-8 text-green-600" />
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-lg shadow-sm border">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Avg Rating</p>
              <p className="text-2xl font-bold text-gray-900">{stats.avgRating}</p>
            </div>
            <BarChart3 className="h-8 w-8 text-yellow-600" />
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white p-6 rounded-lg shadow-sm border">
          <h3 className="text-lg font-semibold mb-4">Recent Bookings</h3>
          <div className="space-y-3">
            {bookings.slice(0, 5).map(booking => (
              <div key={booking.id} className="flex items-center justify-between p-3 bg-gray-50 rounded">
                <div>
                  <p className="font-medium">{booking.farmer}</p>
                  <p className="text-sm text-gray-600">{booking.location}</p>
                </div>
                <StatusBadge status={booking.status} />
              </div>
            ))}
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-lg shadow-sm border">
          <h3 className="text-lg font-semibold mb-4">Equipment Status</h3>
          <div className="space-y-3">
            {tractors.map(tractor => (
              <div key={tractor.id} className="flex items-center justify-between p-3 bg-gray-50 rounded">
                <div>
                  <p className="font-medium">{tractor.id} - {tractor.type}</p>
                  <p className="text-sm text-gray-600">{tractor.location}</p>
                </div>
                <StatusBadge status={tractor.status === 'available' ? 'confirmed' : tractor.status === 'in_use' ? 'in_progress' : 'pending'} />
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  const BookingForm = () => (
    <div className="bg-white p-6 rounded-lg shadow-sm border max-w-2xl">
      <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
        <Plus className="w-5 h-5" />
        New Booking Request
      </h3>
      
      <div className="space-y-4">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Farmer Name</label>
            <input
              type="text"
              value={newBooking.farmer}
              onChange={(e) => setNewBooking({...newBooking, farmer: e.target.value})}
              className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              required
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Contact Number</label>
            <input
              type="tel"
              value={newBooking.contact}
              onChange={(e) => setNewBooking({...newBooking, contact: e.target.value})}
              placeholder="+263 77 123 4567"
              className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              required
            />
          </div>
        </div>
        
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">Location (Ward)</label>
          <input
            type="text"
            value={newBooking.location}
            onChange={(e) => setNewBooking({...newBooking, location: e.target.value})}
            placeholder="e.g., Mutoko Ward 15"
            className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            required
          />
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Service Type</label>
            <select
              value={newBooking.service}
              onChange={(e) => setNewBooking({...newBooking, service: e.target.value})}
              className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="Tractor Ploughing">Tractor Ploughing</option>
              <option value="Animal-drawn Ploughing">Animal-drawn Ploughing</option>
            </select>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Hectares</label>
            <input
              type="number"
              step="0.1"
              min="0.1"
              value={newBooking.hectares}
              onChange={(e) => setNewBooking({...newBooking, hectares: e.target.value})}
              className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              required
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Urgency</label>
            <select
              value={newBooking.urgency}
              onChange={(e) => setNewBooking({...newBooking, urgency: e.target.value})}
              className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="normal">Normal</option>
              <option value="urgent">Urgent (+30%)</option>
            </select>
          </div>
        </div>
        
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">Preferred Date</label>
          <input
            type="date"
            value={newBooking.date}
            onChange={(e) => setNewBooking({...newBooking, date: e.target.value})}
            min={new Date().toISOString().split('T')[0]}
            className="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            required
          />
        </div>
        
        {newBooking.hectares && (
          <div className="bg-blue-50 p-3 rounded-lg">
            <p className="text-sm text-blue-800">
              Estimated Price: <span className="font-semibold">
                ${calculatePrice(newBooking.service, parseFloat(newBooking.hectares) || 0, newBooking.urgency)} USD
              </span>
            </p>
          </div>
        )}
        
        <button
          type="button"
          onClick={handleBookingSubmit}
          className="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition duration-200 font-medium"
        >
          Submit Booking Request
        </button>
      </div>
    </div>
  );

  const ManageBookings = () => (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h3 className="text-lg font-semibold">Manage Bookings</h3>
        <div className="flex gap-2">
          <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-200">
            Export Data
          </button>
        </div>
      </div>
      
      <div className="bg-white rounded-lg shadow-sm border overflow-hidden">
        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Farmer</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Location</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Service</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {bookings.map((booking) => (
                <tr key={booking.id} className="hover:bg-gray-50">
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div>
                      <div className="text-sm font-medium text-gray-900">{booking.farmer}</div>
                      <div className="text-sm text-gray-500">{booking.contact}</div>
                    </div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{booking.location}</td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div className="text-sm text-gray-900">{booking.service}</div>
                    <div className="text-sm text-gray-500">{booking.hectares} ha</div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{booking.date}</td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <StatusBadge status={booking.status} />
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${booking.price}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <button className="text-blue-600 hover:text-blue-900 mr-3">Edit</button>
                    <button className="text-green-600 hover:text-green-900">Assign</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );

  const FleetManagement = () => (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h3 className="text-lg font-semibold">Fleet Management</h3>
        <button className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition duration-200">
          Add Equipment
        </button>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {tractors.map((tractor) => (
          <div key={tractor.id} className="bg-white p-6 rounded-lg shadow-sm border">
            <div className="flex items-center justify-between mb-4">
              <h4 className="text-lg font-semibold">{tractor.id}</h4>
              <StatusBadge status={tractor.status === 'available' ? 'confirmed' : tractor.status === 'in_use' ? 'in_progress' : 'pending'} />
            </div>
            
            <div className="space-y-2">
              <div className="flex items-center gap-2">
                <Tractor className="w-4 h-4 text-gray-500" />
                <span className="text-sm">{tractor.type}</span>
              </div>
              
              <div className="flex items-center gap-2">
                <MapPin className="w-4 h-4 text-gray-500" />
                <span className="text-sm">{tractor.location}</span>
              </div>
              
              <div className="flex items-center gap-2">
                <Users className="w-4 h-4 text-gray-500" />
                <span className="text-sm">{tractor.operator}</span>
              </div>
              
              <div className="flex justify-between text-sm text-gray-600 mt-4">
                <span>Hours: {tractor.hoursWorked}</span>
                <span>Last Service: {tractor.lastService}</span>
              </div>
            </div>
            
            <div className="mt-4 flex gap-2">
              <button className="flex-1 px-3 py-2 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition duration-200 text-sm">
                Track
              </button>
              <button className="flex-1 px-3 py-2 bg-gray-100 text-gray-700 rounded hover:bg-gray-200 transition duration-200 text-sm">
                Service
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const tabs = [
    { id: 'dashboard', label: 'Dashboard', icon: BarChart3 },
    { id: 'booking', label: 'New Booking', icon: Plus },
    { id: 'manage', label: 'Manage Bookings', icon: Calendar },
    { id: 'fleet', label: 'Fleet', icon: Tractor },
  ];

  return (
    <div className="min-h-screen bg-gray-100">
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center gap-3">
              <div className="w-10 h-10 bg-green-600 rounded-lg flex items-center justify-center">
                <Tractor className="w-6 h-6 text-white" />
              </div>
              <div>
                <h1 className="text-xl font-bold text-gray-900">Zimbabwe Tractor Co-op</h1>
                <p className="text-sm text-gray-600">Last Mile Agricultural Services</p>
              </div>
            </div>
            
            <div className="flex items-center gap-2 text-sm text-gray-600">
              <MapPin className="w-4 h-4" />
              <span>Harare Operations Center</span>
            </div>
          </div>
        </div>
      </div>

      <nav className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex space-x-8">
            {tabs.map((tab) => {
              const Icon = tab.icon;
              return (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`flex items-center gap-2 py-4 px-1 border-b-2 font-medium text-sm transition-colors duration-200 ${
                    activeTab === tab.id
                      ? 'border-blue-500 text-blue-600'
                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  }`}
                >
                  <Icon className="w-4 h-4" />
                  {tab.label}
                </button>
              );
            })}
          </div>
        </div>
      </nav>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {activeTab === 'dashboard' && <Dashboard />}
        {activeTab === 'booking' && <BookingForm />}
        {activeTab === 'manage' && <ManageBookings />}
        {activeTab === 'fleet' && <FleetManagement />}
      </main>
      
      <footer className="bg-white border-t mt-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="text-sm text-gray-600">
              <p>Empowering smallholder farmers across Zimbabwe</p>
              <p className="mt-1">📱 SMS: *123*456# | 📞 Hotline: +263 4 123 4567</p>
            </div>
            
            <div className="flex items-center gap-4 mt-4 md:mt-0 text-sm text-gray-600">
              <span>Supported by:</span>
              <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded">World Vision</span>
              <span className="bg-green-100 text-green-800 px-2 py-1 rounded">GIZ</span>
              <span className="bg-purple-100 text-purple-800 px-2 py-1 rounded">Diaspora Fund</span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default TractorCoopPlatform;
